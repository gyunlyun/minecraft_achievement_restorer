name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'  # 使用最新版本，包含 Dart 3.8+
        channel: 'stable'
        
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate localization files
      run: flutter gen-l10n
      
    - name: Build Windows app
      run: flutter build windows --release
      
    - name: Create release directory
      run: |
        mkdir release
        mkdir release/minecraft-achievement-restorer-windows
        
    - name: Copy build files
      run: |
        xcopy "build\windows\x64\runner\Release\*" "release\minecraft-achievement-restorer-windows\" /E /I /H /Y
        
    - name: Copy additional files
      run: |
        copy "README.md" "release\minecraft-achievement-restorer-windows\"
        copy "README_CN.md" "release\minecraft-achievement-restorer-windows\"
        copy "LICENSE" "release\minecraft-achievement-restorer-windows\" 2>nul || echo "LICENSE file not found, skipping..."
        
    - name: Create ZIP archive
      run: |
        cd release
        powershell Compress-Archive -Path "minecraft-achievement-restorer-windows" -DestinationPath "minecraft-achievement-restorer-windows.zip"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: minecraft-achievement-restorer-windows
        path: release/minecraft-achievement-restorer-windows.zip
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: release/minecraft-achievement-restorer-windows.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}